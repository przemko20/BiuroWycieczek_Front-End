{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\CTO-EC\\\\Desktop\\\\Programowanie\\\\Web\\xF3wka\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:\\\\Users\\\\CTO-EC\\\\Desktop\\\\Programowanie\\\\Web\\xF3wka\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\CTO-EC\\\\Desktop\\\\Programowanie\\\\Web\\xF3wka\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\CTO-EC\\\\Desktop\\\\Programowanie\\\\Web\\xF3wka\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\CTO-EC\\\\Desktop\\\\Programowanie\\\\Web\\xF3wka\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\CTO-EC\\\\Desktop\\\\Programowanie\\\\Web\\xF3wka\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: block;\\n      }\\n\\n      [part=\\\"weekdays\\\"],\\n      #days {\\n        display: flex;\\n        flex-wrap: wrap;\\n        flex-grow: 1;\\n      }\\n\\n      #days-container,\\n      #weekdays-container {\\n        display: flex;\\n      }\\n\\n      [part=\\\"week-numbers\\\"] {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        flex-shrink: 0;\\n      }\\n\\n      [part=\\\"week-numbers\\\"][hidden],\\n      [part=\\\"weekday\\\"][hidden] {\\n        display: none;\\n      }\\n\\n      [part=\\\"weekday\\\"],\\n      [part=\\\"date\\\"] {\\n        /* Would use calc(100% / 7) but it doesn't work nice on IE */\\n        width: 14.285714286%;\\n      }\\n\\n      [part=\\\"weekday\\\"]:empty,\\n      [part=\\\"week-numbers\\\"] {\\n        width: 12.5%;\\n        flex-shrink: 0;\\n      }\\n    </style>\\n\\n    <div part=\\\"month-header\\\" role=\\\"heading\\\">[[_getTitle(month, i18n.monthNames)]]</div>\\n    <div id=\\\"monthGrid\\\" on-tap=\\\"_handleTap\\\" on-touchend=\\\"_preventDefault\\\" on-touchstart=\\\"_onMonthGridTouchStart\\\">\\n      <div id=\\\"weekdays-container\\\">\\n        <div hidden=\\\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\\\" part=\\\"weekday\\\"></div>\\n        <div part=\\\"weekdays\\\">\\n          <template is=\\\"dom-repeat\\\" items=\\\"[[_getWeekDayNames(i18n.weekdays, i18n.weekdaysShort, showWeekNumbers, i18n.firstDayOfWeek)]]\\\">\\n            <div part=\\\"weekday\\\" role=\\\"heading\\\" aria-label$=\\\"[[item.weekDay]]\\\">[[item.weekDayShort]]</div>\\n          </template>\\n        </div>\\n      </div>\\n      <div id=\\\"days-container\\\">\\n        <div part=\\\"week-numbers\\\" hidden=\\\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\\\">\\n          <template is=\\\"dom-repeat\\\" items=\\\"[[_getWeekNumbers(_days)]]\\\">\\n            <div part=\\\"week-number\\\" role=\\\"heading\\\" aria-label$=\\\"[[i18n.week]] [[item]]\\\">[[item]]</div>\\n          </template>\\n        </div>\\n        <div id=\\\"days\\\">\\n          <template is=\\\"dom-repeat\\\" items=\\\"[[_days]]\\\">\\n            <div part=\\\"date\\\" today$=\\\"[[_isToday(item)]]\\\" selected$=\\\"[[_dateEquals(item, selectedDate)]]\\\" focused$=\\\"[[_dateEquals(item, focusedDate)]]\\\" date=\\\"[[item]]\\\" disabled$=\\\"[[!_dateAllowed(item, minDate, maxDate)]]\\\" role$=\\\"[[_getRole(item)]]\\\" aria-label$=\\\"[[_getAriaLabel(item)]]\\\" aria-disabled$=\\\"[[_getAriaDisabled(item, minDate, maxDate)]]\\\">[[_getDate(item)]]</div>\\n          </template>\\n        </div>\\n      </div>\\n    </div>\\n\"], [\"\\n    <style>\\n      :host {\\n        display: block;\\n      }\\n\\n      [part=\\\"weekdays\\\"],\\n      #days {\\n        display: flex;\\n        flex-wrap: wrap;\\n        flex-grow: 1;\\n      }\\n\\n      #days-container,\\n      #weekdays-container {\\n        display: flex;\\n      }\\n\\n      [part=\\\"week-numbers\\\"] {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        flex-shrink: 0;\\n      }\\n\\n      [part=\\\"week-numbers\\\"][hidden],\\n      [part=\\\"weekday\\\"][hidden] {\\n        display: none;\\n      }\\n\\n      [part=\\\"weekday\\\"],\\n      [part=\\\"date\\\"] {\\n        /* Would use calc(100% / 7) but it doesn't work nice on IE */\\n        width: 14.285714286%;\\n      }\\n\\n      [part=\\\"weekday\\\"]:empty,\\n      [part=\\\"week-numbers\\\"] {\\n        width: 12.5%;\\n        flex-shrink: 0;\\n      }\\n    </style>\\n\\n    <div part=\\\"month-header\\\" role=\\\"heading\\\">[[_getTitle(month, i18n.monthNames)]]</div>\\n    <div id=\\\"monthGrid\\\" on-tap=\\\"_handleTap\\\" on-touchend=\\\"_preventDefault\\\" on-touchstart=\\\"_onMonthGridTouchStart\\\">\\n      <div id=\\\"weekdays-container\\\">\\n        <div hidden=\\\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\\\" part=\\\"weekday\\\"></div>\\n        <div part=\\\"weekdays\\\">\\n          <template is=\\\"dom-repeat\\\" items=\\\"[[_getWeekDayNames(i18n.weekdays, i18n.weekdaysShort, showWeekNumbers, i18n.firstDayOfWeek)]]\\\">\\n            <div part=\\\"weekday\\\" role=\\\"heading\\\" aria-label\\\\$=\\\"[[item.weekDay]]\\\">[[item.weekDayShort]]</div>\\n          </template>\\n        </div>\\n      </div>\\n      <div id=\\\"days-container\\\">\\n        <div part=\\\"week-numbers\\\" hidden=\\\"[[!_showWeekSeparator(showWeekNumbers, i18n.firstDayOfWeek)]]\\\">\\n          <template is=\\\"dom-repeat\\\" items=\\\"[[_getWeekNumbers(_days)]]\\\">\\n            <div part=\\\"week-number\\\" role=\\\"heading\\\" aria-label\\\\$=\\\"[[i18n.week]] [[item]]\\\">[[item]]</div>\\n          </template>\\n        </div>\\n        <div id=\\\"days\\\">\\n          <template is=\\\"dom-repeat\\\" items=\\\"[[_days]]\\\">\\n            <div part=\\\"date\\\" today\\\\$=\\\"[[_isToday(item)]]\\\" selected\\\\$=\\\"[[_dateEquals(item, selectedDate)]]\\\" focused\\\\$=\\\"[[_dateEquals(item, focusedDate)]]\\\" date=\\\"[[item]]\\\" disabled\\\\$=\\\"[[!_dateAllowed(item, minDate, maxDate)]]\\\" role\\\\$=\\\"[[_getRole(item)]]\\\" aria-label\\\\$=\\\"[[_getAriaLabel(item)]]\\\" aria-disabled\\\\$=\\\"[[_getAriaDisabled(item, minDate, maxDate)]]\\\">[[_getDate(item)]]</div>\\n          </template>\\n        </div>\\n      </div>\\n    </div>\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { DatePickerHelper } from './vaadin-date-picker-helper.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * @memberof Vaadin\n * @private\n */\n\nvar MonthCalendarElement =\n/*#__PURE__*/\nfunction (_ThemableMixin) {\n  _inherits(MonthCalendarElement, _ThemableMixin);\n\n  function MonthCalendarElement() {\n    _classCallCheck(this, MonthCalendarElement);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MonthCalendarElement).apply(this, arguments));\n  }\n\n  _createClass(MonthCalendarElement, [{\n    key: \"_dateEquals\",\n    value: function _dateEquals(date1, date2) {\n      return DatePickerHelper._dateEquals(date1, date2);\n    }\n  }, {\n    key: \"_dateAllowed\",\n    value: function _dateAllowed(date, min, max) {\n      return DatePickerHelper._dateAllowed(date, min, max);\n    }\n    /* Returns true if all the dates in the month are out of the allowed range */\n\n  }, {\n    key: \"_isDisabled\",\n    value: function _isDisabled(month, minDate, maxDate) {\n      // First day of the month\n      var firstDate = new Date(0, 0);\n      firstDate.setFullYear(month.getFullYear());\n      firstDate.setMonth(month.getMonth());\n      firstDate.setDate(1); // Last day of the month\n\n      var lastDate = new Date(0, 0);\n      lastDate.setFullYear(month.getFullYear());\n      lastDate.setMonth(month.getMonth() + 1);\n      lastDate.setDate(-1);\n\n      if (minDate && maxDate && minDate.getMonth() === maxDate.getMonth() && minDate.getMonth() === month.getMonth() && maxDate.getDate() - minDate.getDate() >= 0) {\n        return false;\n      }\n\n      return !this._dateAllowed(firstDate, minDate, maxDate) && !this._dateAllowed(lastDate, minDate, maxDate);\n    }\n  }, {\n    key: \"_getTitle\",\n    value: function _getTitle(month, monthNames) {\n      if (month === undefined || monthNames === undefined) {\n        return;\n      }\n\n      return this.i18n.formatTitle(monthNames[month.getMonth()], month.getFullYear());\n    }\n  }, {\n    key: \"_onMonthGridTouchStart\",\n    value: function _onMonthGridTouchStart() {\n      var _this = this;\n\n      this._notTapping = false;\n      setTimeout(function () {\n        return _this._notTapping = true;\n      }, 300);\n    }\n  }, {\n    key: \"_dateAdd\",\n    value: function _dateAdd(date, delta) {\n      date.setDate(date.getDate() + delta);\n    }\n  }, {\n    key: \"_applyFirstDayOfWeek\",\n    value: function _applyFirstDayOfWeek(weekDayNames, firstDayOfWeek) {\n      if (weekDayNames === undefined || firstDayOfWeek === undefined) {\n        return;\n      }\n\n      return weekDayNames.slice(firstDayOfWeek).concat(weekDayNames.slice(0, firstDayOfWeek));\n    }\n  }, {\n    key: \"_getWeekDayNames\",\n    value: function _getWeekDayNames(weekDayNames, weekDayNamesShort, showWeekNumbers, firstDayOfWeek) {\n      if (weekDayNames === undefined || weekDayNamesShort === undefined || showWeekNumbers === undefined || firstDayOfWeek === undefined) {\n        return;\n      }\n\n      weekDayNames = this._applyFirstDayOfWeek(weekDayNames, firstDayOfWeek);\n      weekDayNamesShort = this._applyFirstDayOfWeek(weekDayNamesShort, firstDayOfWeek);\n      weekDayNames = weekDayNames.map(function (day, index) {\n        return {\n          weekDay: day,\n          weekDayShort: weekDayNamesShort[index]\n        };\n      });\n      return weekDayNames;\n    }\n  }, {\n    key: \"_getDate\",\n    value: function _getDate(date) {\n      return date ? date.getDate() : '';\n    }\n  }, {\n    key: \"_showWeekNumbersChanged\",\n    value: function _showWeekNumbersChanged(showWeekNumbers, firstDayOfWeek) {\n      if (showWeekNumbers && firstDayOfWeek === 1) {\n        this.setAttribute('week-numbers', '');\n      } else {\n        this.removeAttribute('week-numbers');\n      }\n    }\n  }, {\n    key: \"_showWeekSeparator\",\n    value: function _showWeekSeparator(showWeekNumbers, firstDayOfWeek) {\n      // Currently only supported for locales that start the week on Monday.\n      return showWeekNumbers && firstDayOfWeek === 1;\n    }\n  }, {\n    key: \"_isToday\",\n    value: function _isToday(date) {\n      return this._dateEquals(new Date(), date);\n    }\n  }, {\n    key: \"_getDays\",\n    value: function _getDays(month, firstDayOfWeek) {\n      if (month === undefined || firstDayOfWeek === undefined) {\n        return;\n      } // First day of the month (at midnight).\n\n\n      var date = new Date(0, 0);\n      date.setFullYear(month.getFullYear());\n      date.setMonth(month.getMonth());\n      date.setDate(1); // Rewind to first day of the week.\n\n      while (date.getDay() !== firstDayOfWeek) {\n        this._dateAdd(date, -1);\n      }\n\n      var days = [];\n      var startMonth = date.getMonth();\n      var targetMonth = month.getMonth();\n\n      while (date.getMonth() === targetMonth || date.getMonth() === startMonth) {\n        days.push(date.getMonth() === targetMonth ? new Date(date.getTime()) : null); // Advance to next day.\n\n        this._dateAdd(date, 1);\n      }\n\n      return days;\n    }\n  }, {\n    key: \"_getWeekNumber\",\n    value: function _getWeekNumber(date, days) {\n      if (date === undefined || days === undefined) {\n        return;\n      }\n\n      if (!date) {\n        // Get the first non-null date from the days array.\n        date = days.reduce(function (acc, d) {\n          return !acc && d ? d : acc;\n        });\n      }\n\n      return DatePickerHelper._getISOWeekNumber(date);\n    }\n  }, {\n    key: \"_getWeekNumbers\",\n    value: function _getWeekNumbers(dates) {\n      var _this2 = this;\n\n      return dates.map(function (date) {\n        return _this2._getWeekNumber(date, dates);\n      }).filter(function (week, index, arr) {\n        return arr.indexOf(week) === index;\n      });\n    }\n  }, {\n    key: \"_handleTap\",\n    value: function _handleTap(e) {\n      if (!this.ignoreTaps && !this._notTapping && e.target.date && !e.target.hasAttribute('disabled')) {\n        this.selectedDate = e.target.date;\n        this.dispatchEvent(new CustomEvent('date-tap', {\n          bubbles: true,\n          composed: true\n        }));\n      }\n    }\n  }, {\n    key: \"_preventDefault\",\n    value: function _preventDefault(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"_getRole\",\n    value: function _getRole(date) {\n      return date ? 'button' : 'presentation';\n    }\n  }, {\n    key: \"_getAriaLabel\",\n    value: function _getAriaLabel(date) {\n      if (!date) {\n        return '';\n      }\n\n      var ariaLabel = this._getDate(date) + ' ' + this.i18n.monthNames[date.getMonth()] + ' ' + date.getFullYear() + ', ' + this.i18n.weekdays[date.getDay()];\n\n      if (this._isToday(date)) {\n        ariaLabel += ', ' + this.i18n.today;\n      }\n\n      return ariaLabel;\n    }\n  }, {\n    key: \"_getAriaDisabled\",\n    value: function _getAriaDisabled(date, min, max) {\n      if (date === undefined || min === undefined || max === undefined) {\n        return;\n      }\n\n      return this._dateAllowed(date, min, max) ? 'false' : 'true';\n    }\n  }], [{\n    key: \"template\",\n    get: function get() {\n      return html(_templateObject());\n    }\n  }, {\n    key: \"is\",\n    get: function get() {\n      return 'vaadin-month-calendar';\n    }\n  }, {\n    key: \"properties\",\n    get: function get() {\n      return {\n        /**\n         * A `Date` object defining the month to be displayed. Only year and\n         * month properties are actually used.\n         */\n        month: {\n          type: Date,\n          value: new Date()\n        },\n\n        /**\n         * A `Date` object for the currently selected date.\n         */\n        selectedDate: {\n          type: Date,\n          notify: true\n        },\n\n        /**\n         * A `Date` object for the currently focused date.\n         */\n        focusedDate: Date,\n        showWeekNumbers: {\n          type: Boolean,\n          value: false\n        },\n        i18n: {\n          type: Object\n        },\n\n        /**\n         * Flag stating whether taps on the component should be ignored.\n         */\n        ignoreTaps: Boolean,\n        _notTapping: Boolean,\n\n        /**\n         * The earliest date that can be selected. All earlier dates will be disabled.\n         */\n        minDate: {\n          type: Date,\n          value: null\n        },\n\n        /**\n         * The latest date that can be selected. All later dates will be disabled.\n         */\n        maxDate: {\n          type: Date,\n          value: null\n        },\n        _days: {\n          type: Array,\n          computed: '_getDays(month, i18n.firstDayOfWeek, minDate, maxDate)'\n        },\n        disabled: {\n          type: Boolean,\n          reflectToAttribute: true,\n          computed: '_isDisabled(month, minDate, maxDate)'\n        }\n      };\n    }\n  }, {\n    key: \"observers\",\n    get: function get() {\n      return ['_showWeekNumbersChanged(showWeekNumbers, i18n.firstDayOfWeek)'];\n    }\n  }]);\n\n  return MonthCalendarElement;\n}(ThemableMixin(GestureEventListeners(PolymerElement)));\n\ncustomElements.define(MonthCalendarElement.is, MonthCalendarElement);","map":null,"metadata":{},"sourceType":"module"}