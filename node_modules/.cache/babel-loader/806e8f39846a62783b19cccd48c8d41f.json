{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n/* eslint-disable no-unused-vars */\n\nimport { Debouncer } from '../utils/debounce.js'; // used in type annotations\n\n/* eslint-enable no-unused-vars */\n\nvar debouncerQueue = [];\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\n\nexport var enqueueDebouncer = function enqueueDebouncer(debouncer) {\n  debouncerQueue.push(debouncer);\n};\n\nfunction flushDebouncers() {\n  var didFlush = Boolean(debouncerQueue.length);\n\n  while (debouncerQueue.length) {\n    try {\n      debouncerQueue.shift().flush();\n    } catch (e) {\n      setTimeout(function () {\n        throw e;\n      });\n    }\n  }\n\n  return didFlush;\n}\n/**\n * Forces several classes of asynchronously queued tasks to flush:\n * - Debouncers added via `enqueueDebouncer`\n * - ShadyDOM distribution\n *\n * @return {void}\n */\n\n\nexport var flush = function flush() {\n  var shadyDOM, debouncers;\n\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};","map":null,"metadata":{},"sourceType":"module"}